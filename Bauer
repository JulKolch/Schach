package SchachFiguren;

import schach.ChessGame;
import schach.ColorFigure;
import schach.Figure;

public class Bauer extends Figure {

    ChessGame chessGame = new ChessGame();

    public static String black = "♙";
    public static String white = "♟";

    public Bauer(int posStart, int posEnd, ColorFigure colorFigure){
        super(posStart,posEnd, colorFigure);
    }

    @Override
    public boolean moveIsPossible(int posStart, int posEnd) {
        System.out.println(posEnd%10 - posStart%10);
        boolean b1 = (chessGame.askColor(posStart) == ColorFigure.White) && ((posEnd%10 - posStart%10)==1);
        boolean b2 = ((chessGame.askColor(posStart) == ColorFigure.Black) && ((posStart%10 - posEnd%10)==1));
        System.out.println(b1 + " for white and " + b2 + "for black");

        if(((chessGame.askColor(posStart) == ColorFigure.White) && ((posEnd%10 - posStart%10)==1))||((chessGame.askColor(posStart) == ColorFigure.Black) && ((posStart%10 - posEnd%10)==1))){
            return true;
        }
        else
        {
            System.out.println("Move is not possible");
            return false;
        }
    }

    @Override
    public void makeMove(int posStart, int posEnd) {
        if(chessGame.askColor(posStart) == ColorFigure.Black){
            ChessGame.field[posEnd%10-1][posEnd/10-1].value= Bauer.black;
        } else {ChessGame.field[posEnd%10-1][posEnd/10-1].value= Bauer.white;}
        ChessGame.field[posStart%10-1][posStart/10-1].value= "   ";
        ChessGame.field[posStart%10-1][posStart/10-1].type= Type.Null;
        ChessGame.field[posEnd%10-1][posEnd/10-1].type = Type.Bauer;
        ChessGame.field[posStart%10-1][posStart/10-1].colorFigure = ColorFigure.Null;
        ChessGame.field[posEnd%10-1][posEnd/10-1].colorFigure = chessGame.askColor(posStart);
    }
}

